# Generated by Django 5.1.2 on 2025-03-10 19:33

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Avatar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fueBorrado', models.BooleanField(default=False)),
                ('creado', models.DateTimeField(default=django.utils.timezone.now)),
                ('modificado', models.DateTimeField(default=django.utils.timezone.now)),
                ('nombre', models.CharField(max_length=50, unique=True)),
                ('dirAvatar', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contenido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fueBorrado', models.BooleanField(default=False)),
                ('creado', models.DateTimeField(default=django.utils.timezone.now)),
                ('modificado', models.DateTimeField(default=django.utils.timezone.now)),
                ('contenido', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'contenido',
            },
        ),
        migrations.CreateModel(
            name='Pregunta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fueBorrado', models.BooleanField(default=False)),
                ('creado', models.DateTimeField(default=django.utils.timezone.now)),
                ('modificado', models.DateTimeField(default=django.utils.timezone.now)),
                ('pregunta', models.TextField(max_length=7000)),
                ('videoLink', models.URLField()),
                ('imgDir', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'pregunta',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('fueBorrado', models.BooleanField(default=False)),
                ('creado', models.DateTimeField(default=django.utils.timezone.now)),
                ('modificado', models.DateTimeField(default=django.utils.timezone.now)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=130)),
                ('avatarActual', models.CharField(max_length=50)),
                ('monedas', models.IntegerField(default=0)),
                ('ultimaConexion', models.DateTimeField(auto_now_add=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('avatars', models.ManyToManyField(to='api.avatar')),
            ],
            options={
                'db_table': 'usuario',
            },
        ),
        migrations.CreateModel(
            name='Ensayo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fueBorrado', models.BooleanField(default=False)),
                ('creado', models.DateTimeField(default=django.utils.timezone.now)),
                ('modificado', models.DateTimeField(default=django.utils.timezone.now)),
                ('nombre', models.CharField(max_length=50)),
                ('esPersonalizado', models.BooleanField(default=False)),
                ('numeroPreguntas', models.IntegerField()),
                ('duracionSeleccionada', models.IntegerField()),
                ('duracionOcupada', models.IntegerField()),
                ('puntajeEnsayo', models.IntegerField(default=0)),
                ('ensayoPadre', models.BigIntegerField(null=True)),
                ('ultimoNombreRegistrado', models.CharField(max_length=50, null=True)),
                ('contenido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.contenido')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('preguntas', models.ManyToManyField(related_name='preguntas_de_ensayo', to='api.pregunta')),
            ],
            options={
                'db_table': 'ensayo',
            },
        ),
        migrations.CreateModel(
            name='Respuesta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fueBorrado', models.BooleanField(default=False)),
                ('creado', models.DateTimeField(default=django.utils.timezone.now)),
                ('modificado', models.DateTimeField(default=django.utils.timezone.now)),
                ('respuesta', models.CharField(max_length=200)),
                ('esCorrecta', models.BooleanField()),
                ('pregunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.pregunta')),
            ],
            options={
                'db_table': 'respuesta',
            },
        ),
        migrations.CreateModel(
            name='RespuestaSeleccionada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fueBorrado', models.BooleanField(default=False)),
                ('creado', models.DateTimeField(default=django.utils.timezone.now)),
                ('modificado', models.DateTimeField(default=django.utils.timezone.now)),
                ('fueCorrecta', models.BooleanField()),
                ('ensayo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ensayo')),
                ('respuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.respuesta')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'respuesta_seleccionada',
            },
        ),
        migrations.CreateModel(
            name='Subcontenido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fueBorrado', models.BooleanField(default=False)),
                ('creado', models.DateTimeField(default=django.utils.timezone.now)),
                ('modificado', models.DateTimeField(default=django.utils.timezone.now)),
                ('subcontenido', models.CharField(max_length=50, unique=True)),
                ('contenido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.contenido')),
            ],
            options={
                'db_table': 'subcontenido',
            },
        ),
        migrations.AddField(
            model_name='pregunta',
            name='subcontenido',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.subcontenido'),
        ),
        migrations.AddField(
            model_name='ensayo',
            name='subcontenidos',
            field=models.ManyToManyField(related_name='subcontneido_de_ensayo', to='api.subcontenido'),
        ),
    ]
